#I don't know if lsmetrics does this.... But grass can perform the function "clump"... Then #i have written a python script that counts pixel areas of each clump.... Then you can use #the grass function "reclass" to change the pixel values of each clump to the pixel area of #that clump.... Then lsmetrics already has a function for detecting edges.... Then you #basically have eride. It's pretty quick, and not too much memory needed.

#I see it uses r.stats.zonal... I don't know this one... But r.stats was horrendously #slow... Which I why I did a python script. I'll show you how I do it... Maybe it'll be #useful... Who knows
#lsmetrics: https://grass.osgeo.org/grass82/manuals/r.stats.zonal.html
# old slow: https://grass.osgeo.org/grass82/manuals/r.stats.html

#-----
in there, you'll find a file called "count_cells_par.py"

on my system - I run it like this:

python3 count_cells_par.py patches.tif patch_counts.txt

"patches.tif" is the tiff with each patch labelled with a different number

the output is a table of the areas of each patch - in pixels

then... you can use "r.reclass" in grass to relabel the "patches" layer with the areas of each patch

I do that like this in R:

rgrass7::execGRASS("r.reclass",
                  input="patches",
                  rules="patch_counts.txt",
                  output="areas")

